M

list_empty ... ∅ → res_addr
    0 ⇒ res_addr
    ꓭ

list_add ... ∅ → val, ∅ → head
    last_node = head

    P { 'head ≠ 0 } ↓ go
        Ц { 'head, '∅, P { 'π ≠ 0 } ⇒ π } l1
            last_node = 'π;
        l1 ...
    go ...
        alloc 2 ⇒ new_node;
        'new_node ⇒ last_node
        0 ⇒ 'new_node
        val ⇒ 'new_node + 1
    ꓭ

list_map ... ∅ → f, ∅ → head, ∅ → r
    П list_empty { r }

    P { 'head = 0 } ꓭ ↓

    Ц { 'head, '∅, P { 'π ≠ 0 } ⇒ π } l1
        val = '('π + 1)
        П f { val, new_val }
        П list_add { 'new_val, r }
    l1 ...
    ꓭ

double_val ... ∅ → val, ∅ → res_addr
    val × 2 ⇒ res_addr
    ꓭ

M ...
    0 ⇒ list
    alloc 2 ⇒ node1
    'node1 ⇒ list
    1 ⇒ 'node1 + 1

    alloc 2 ⇒ node2
    'node2 ⇒ 'node1
    2 ⇒ 'node2 + 1

    alloc 2 ⇒ node3
    'node3 ⇒ 'node2
    3 ⇒ 'node3 + 1

    0 ⇒ 'node3

    Печать list

    П list_map { double_val, list, new_list }

    Печать new_list