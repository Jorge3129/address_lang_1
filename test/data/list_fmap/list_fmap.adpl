list2 = []

list2_len = 5

L { 0(1)(list2_len - 1) => pi } l1
    new_addr = alloc 3
    prev_addr = `('pi)`list2
    new_addr => prev_addr
    ptr(0) => new_addr
    1 => new_addr + 1
    P { 'pi % 2 == 0 } f = &double | f = &triple
    f => new_addr + 2
@l1 ...

printList list2

Pg fmap { list2, res2 }

printList res2

!
@double ... Nil => val, Nil => res_addr
    'val * 2 => 'res_addr
    Ret

@triple ... Nil => val, Nil => res_addr
    'val * 3 => 'res_addr
    Ret

@fmap ... Nil => list_addr, Nil => r
    head = 'list_addr
    Pg list_empty { 'r }

    P { 'head == 0 } Ret |

    L { 'head, 'Nil, P { 'pi /= 0 } => pi } l1
        val = '('pi + 1)
        f = '('pi + 2)
        Pg [f] { val, new_val }
        Pg list_add { 'new_val, 'r }
    @l1 ...
    Ret

@list_empty ... Nil => targetAddr
    0 => 'targetAddr
    Ret

@list_add ... Nil => val, Nil => list_addr
    h = 'list_addr
    last_node = h

    P { 'h /= 0 } | go
        L { 'h, 'Nil, P { ''i /= 0 } => i } l1
        @l1 ...
        last_node = 'i;
    @go ...
        new_node = alloc 2;
        new_node => last_node
        ptr(0) => new_node
        'val => new_node + 1
    Ret